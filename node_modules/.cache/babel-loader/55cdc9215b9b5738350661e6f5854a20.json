{"ast":null,"code":"import _slicedToArray from \"/Users/elaine.lee/Documents/WORK/internalProjects/tic-tac-toe-react-redux/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elaine.lee/Documents/WORK/internalProjects/tic-tac-toe-react-redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from '../components/Game';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.value);\n} // class Board extends React.Component {\n//   renderSquare(i) {\n//     return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// class Game extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       history: [\n//         {squares: Array(9).fill(null),\n//         }\n//       ],\n//       stepNumber: 0,\n//       xIsNext: true\n//     };\n//   }\n//    handleClick(i){\n//     const history = this.state.history.slice(0, this.state.stepNumber +1);\n//     const current = history[history.length -1];\n//     const squares = current.squares.slice();\n//     if(calculateWinner(squares) || squares[i]){\n//       return;\n//     }\n//       squares[i] = this.state.xIsNext ? 'X' : 'O';\n//       this.setState({\n//         history: history.concat([{\n//           squares: squares\n//         }]),\n//         stepNumber: history.length,\n//         xIsNext: !this.state.xIsNext\n//       });\n//     }\n//      jumpTo(step){\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0\n//     });\n//   }\n//   render() {\n//     const history = this.state.history;\n//     const current = history[this.state.stepNumber];\n//     const winner = calculateWinner(current.squares);\n//     const moves = history.map((step,move)=>{\n//       const desc = move ? 'Go to move #' + move : 'Go to game start';\n//       return(\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//         );\n//     })\n//     let status;\n//     if (winner){\n//       status = 'Winner is:  ' + winner + '!';\n//     } else {\n//       status =  'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n//     }\n//     return (\n//       <Provider store={store}>\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board squares={current.squares} onClick={(i) => this.handleClick(i)}/>\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//       </Provider>\n//     );\n//   }\n// }\n\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/elaine.lee/Documents/WORK/internalProjects/tic-tac-toe-react-redux/src/index.js"],"names":["React","ReactDOM","Game","Provider","store","Square","props","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAKA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AACpB,SACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,KAAK,CAACC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,KAAK,CAACE,KADP,CADF;AAKD,C,CAED;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGC,SAASC,eAAT,CAAyBC,OAAzB,EAAiC;AAC9B,MAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAWA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAED,KAAK,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAAA,kCACjBD,KAAK,CAACC,CAAD,CADY;AAAA,QAC1BE,CAD0B;AAAA,QACxBC,CADwB;AAAA,QACtBC,CADsB;;AAEhC,QAAGN,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAaJ,OAAO,CAACK,CAAD,CAAlC,IAAyCL,OAAO,CAACI,CAAD,CAAP,KAAaJ,OAAO,CAACM,CAAD,CAAhE,EAAoE;AAClE,aAAON,OAAO,CAACI,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD,C,CAEH;;;AAEAb,QAAQ,CAACgB,MAAT,CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from '../components/Game'\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\n\n\n\nfunction Square(props){\n  return(\n    <button className='square' onClick={props.onClick}>\n    {props.value}\n    </button>\n    )\n}\n\n// class Board extends React.Component {\n//   renderSquare(i) {\n//     return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\n//   };\n  \n//   render() {\n\n//     return (\n//       <div>\n       \n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Game extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       history: [\n//         {squares: Array(9).fill(null),\n//         }\n//       ],\n//       stepNumber: 0,\n//       xIsNext: true\n//     };\n//   }\n\n \n\n//    handleClick(i){\n//     const history = this.state.history.slice(0, this.state.stepNumber +1);\n//     const current = history[history.length -1];\n//     const squares = current.squares.slice();\n//     if(calculateWinner(squares) || squares[i]){\n//       return;\n//     }\n//       squares[i] = this.state.xIsNext ? 'X' : 'O';\n//       this.setState({\n//         history: history.concat([{\n//           squares: squares\n//         }]),\n//         stepNumber: history.length,\n//         xIsNext: !this.state.xIsNext\n//       });\n     \n//     }\n\n//      jumpTo(step){\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0\n//     });\n\n//   }\n\n//   render() {\n//     const history = this.state.history;\n//     const current = history[this.state.stepNumber];\n//     const winner = calculateWinner(current.squares);\n\n//     const moves = history.map((step,move)=>{\n//       const desc = move ? 'Go to move #' + move : 'Go to game start';\n//       return(\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//         );\n//     })\n\n//     let status;\n//     if (winner){\n//       status = 'Winner is:  ' + winner + '!';\n//     } else {\n//       status =  'Next player: ' + (this.state.xIsNext ? \"X\" : \"O\");\n//     }\n//     return (\n//       <Provider store={store}>\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board squares={current.squares} onClick={(i) => this.handleClick(i)}/>\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//       </Provider>\n//     );\n//   }\n// }\n\n\n function calculateWinner(squares){\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for(let i=0; i< lines.length; i++){\n      const[a,b,c] = lines[i];\n      if(squares[a] && squares[a]===squares[b] && squares[a]===squares[c]){\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}